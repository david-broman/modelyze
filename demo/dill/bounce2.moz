/*
Modeling Kernel Language (Modelyze) library
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

written by Oscar Eriksson oerikss@kth.se

*/

include DILL

def y, v: <Real>
def g = 9.81
def e = 0.7

def fall(y: <Real>, v: <Real>, y_0: <Real>, v_0: <Real>) = {
  reinit y y_0 ++ 
  reinit v v_0 ++
  reinit (der y) v_0 ++
  eqs_and_edges (
    der y = v;
    der v = -g
  )
}

def bouncing_ball(y: <Real>, v: <Real>, y_0: <Real>, v_0: <Real>) -> HModel = {
  switch (fall y v y_0 v_0) (y) (fun t: () -> bouncing_ball y v (pre y) (-e * pre v))
}

def monitored = [(y, "y"), (v, "v")]

def main = {
  def m = bouncing_ball y v 10. 0.;
  simulate m (0.,7.0) 0.01 monitored 2.9 0.001 true false
  }
