/*
Modeling Kernel Language (Modelyze) library
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.

written by Oscar Eriksson oerikss@kth.se
*/

include Base

def simpleAssert(p: Bool) = {
  if p then println("OK!") else println("Fail!")
}

def simpleAssertMsg(p: Bool, msgp: (() -> ())) = {
  if p then println("OK!") else{ def _ = println("Fail!"); msgp() }
}

def expActMsg(exp: ?, act: ?, t: ()) -> () = {
  def _ = println("Expected: ");
  def _ = dprint(exp);
  def _ = println("Found: ");
  dprint(act)
}

def testCase(name: String, test: (() -> ())) -> () = {
  def _ = println("==> Start test case " ++ name);
  def _ = test();
  println("==> End test case " ++ name)
}

def isEqual(lhs: Set(?), rhs: Set(?)) -> Bool = {
  def subsetleft = forAll (fun e: ? -> (Set.mem e rhs)) (Set.toList lhs);
  def subsetright = forAll (fun e: ? -> (Set.mem e lhs)) (Set.toList rhs);
  subsetleft && subsetright
}
